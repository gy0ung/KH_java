package day10;

public class Day10 {

}

// ■ 제어자 : 클래스, 변수, 메서드의 선언부에 사용되어 부가적인 의미를 부여한다.
//        크게 [접근제어자] / [그 외의 제어자] 로 나뉜다.
//        하나의 대상에 여러 개의 제어자를 조합해서 사용할 수 있으나, 접근제어자는 단 하나만 사용가능

// ■ 제어자의 종류
// 접근 제어자 : 멤버 또는 클래스에 사용되어, 외부로부터의 접근을 제한한다.
//			   클래스, 멤버변수, 메서드, 생성자에서 접근 제어자가 사용될 수 있다.
//			   public, protected, default, private

// 그     외 : static, final, abstract, synchronized ... ← 자주 사용 

// ■ 제어자의 종류 중 (그 외) 
// final : 클래스, 메서드, 멤버변수, 지역변수 앞에서 사용될 수 있다.
//         클래스 - 변경 및 확장될 수 없는 클래스가 되어 부모클래스가 될 수 없다.
// 		   메서드 - 변경될 수 없는 메서드가 되어 오버라이딩 불가능
//         멤버변수/지역변수 - 값을 변경할 수 없는 상수가 된다.



// ■ 다형성 : 오버라이딩, 클래스 형변환
//			 오버로딩

// ■ 클래스 형변환 : 자식타입  		   →  부모형변환 (자동형변환)
//				  자식객체 + 부모객체  →  부모객체만 사용 

// 				  부모타입           →  자식타입변환 (강제형변환)
//					*주의) 반드시 자식객체로 만들어진 부모타입만 자식타입으로 변환가능

//				    ▽ 처음부터 부모객체 만들어진 것은 형변환 안됨
//				  부모객체           → 자식객체 + 부모객체 (오류)

//  				▽ 하기와 같은 것만 가능
//				  자식객체 + 부모객체  →  부모객체만 사용
//				  부모객체           →  -자식객체- + 부모객체
//
